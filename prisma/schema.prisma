// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  username String
  email    String
  password String
  salt     String
  role     Int      @default(0)
  Device   Device[]
  Report   Report[]
}

model Device {
  id        String      @id @default(cuid())
  name      String
  type      String
  owner     User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  Attribute Attribute[]
  KeyValue  KeyValue[]
}

model Attribute {
  id               String             @id @default(cuid())
  name             String
  type             String
  device           Device             @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  deviceId         String
  telemetry        Telemetry[]
  AttributesInPost ReportAttributes[]
}

model KeyValue {
  id       String @id @default(cuid())
  key      String
  value    String
  device   Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  deviceId String
}

model Telemetry {
  id          String    @id @default(cuid())
  createdAt   DateTime
  attribute   Attribute @relation(fields: [attributeId], references: [id], onDelete: Cascade)
  value       String
  attributeId String
}

model Report {
  id         String             @id @default(cuid())
  name       String
  user       User               @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  attributes ReportAttributes[]
  userId     String
  intervalMs BigInt
  sendEmail  Boolean
  lastSent   DateTime
}

model ReportAttributes {
  id          String    @id @default(cuid())
  attribute   Attribute @relation(fields: [attributeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  report      Report    @relation(fields: [reportId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  attributeId String
  reportId    String
}
